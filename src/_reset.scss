@use "./util/mixins/breakpoint";
@use "./util/functions/space";
@use "./util/functions/fontsize";


* {
    box-sizing: border-box;
}

html {
    padding: 0;
    height: 100%;
    font-family: sans-serif;
    font-size: var(--flecss__fontsize);
    font-weight: 400;
    text-rendering: optimizeLegibility;
    scroll-behavior: smooth;
}
body {
    margin: 0;
    min-height: 100%;
    font-size: 1rem;
}

body,
header, main, footer {
    width: 100%;
}

body,
main, header, footer,
aside, section, div {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    height: fit-content;
}

main {
    main, header, footer,
    aside, section, div {
        gap: space.space("m");
    }
}

body {
    & > main,
    & > div:first-of-type {
        flex: 1 0 auto;
    }
    & > main ~ div {
        flex: auto !important;
    }
}

main {
    p, blockquote {
        max-width: var(--flecss__max-textwidth);
    }
}

h1, h2, h3, h4, h5, h6,
p,
blockquote,
table,
ul, ol,
pre, code {
    margin: 0;
}

p, blockquote,
td,
li {
    line-height: 1.5em;
}

input, textarea {
    font-family: inherit;
    font-size: inherit;
}

img {
    object-fit: cover;
}

a {
    text-decoration: none;
}

h1, h2, h3, h4, h5, h6 {
    line-height: 1.375em;
    font-weight: 600;
     
    &:not(:first-child) {
        margin-top: calc(0.5 * space.space("m"));
    }
    &:not(:last-child) {
        transform: translateY(calc(-1 * (0.375em / 2)));
        margin-bottom: -0.375em;
    }
}

@mixin heading-fontsize($level: 1) {
    $factor: calc(1 + (6 - $level) * var(--flecss__headingsize-factor));
    
    font-size: fontsize.fontsize($factor);
}

h1 {
    @include heading-fontsize(1);
}
h2 {
    @include heading-fontsize(2);
}
h3 {
    @include heading-fontsize(3);
}
h4 {
    @include heading-fontsize(4);
}
h5 {
    @include heading-fontsize(5);
}
h6 {
    @include heading-fontsize(6);
}