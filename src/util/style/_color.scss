@use "sass:color" as sass-color;

@use "config.flecss" as config;

@use "../../_property";

@use "../state/theme";


$_property: "color";
$_shade-percentage: 100% * config.$color-shade-coefficient - 100%;


@function _color-identifier($identifier, $shade, $theme: null) {
    @return "#{if($theme, "#{$theme}_", "")}#{$identifier}--#{if($shade, $shade, "normal")}";
}


@mixin _define-color($color, $identifier, $shade, $theme: null) {
    @include property.define-scoped-property($_property, _color-identifier($identifier, $shade, $theme), $color);
}

@mixin _define-color-group($color, $identifier, $theme: null, $invert-shading: false) {
    $shade-coefficient: config.$color-shade-coefficient - 1;
    $shade-percentage: max(25%, 100% - sass-color.whiteness($color));
    $factor: if($invert-shading, -1, 1);

    @include _define-color($color, $identifier, "normal", $theme);
    @include _define-color(#{sass-color.scale($color, $lightness: $factor * $shade-percentage * 1 * $shade-coefficient)}, $identifier, "light", $theme);
    @include _define-color(#{sass-color.scale($color, $lightness: $factor * $shade-percentage * 2 * $shade-coefficient)}, $identifier, "lighter", $theme);
    @include _define-color(#{sass-color.scale($color, $lightness: -1 * $factor * $shade-percentage * 1 * $shade-coefficient)}, $identifier, "dark", $theme);
    @include _define-color(#{sass-color.scale($color, $lightness: -1 * $factor * $shade-percentage * 2 * $shade-coefficient)}, $identifier, "darker", $theme);
}

@mixin _enable-color-group-theme($identifier, $theme) {
    @include _define-color(color($identifier, "normal", $theme), $identifier, "normal");
    @include _define-color(color($identifier, "light", $theme), $identifier, "light");
    @include _define-color(color($identifier, "lighter", $theme), $identifier, "lighter");
    @include _define-color(color($identifier, "dark", $theme), $identifier, "dark");
    @include _define-color(color($identifier, "darker", $theme), $identifier, "darker");
}


@mixin color($identifier, $light-color, $dark-color: null) {
    @include _define-color-group($light-color, $identifier, "light");

    @include _enable-color-group-theme($identifier, "light");

    @if $dark-color {
        @include _define-color-group($dark-color, $identifier, "dark", true);

        @include theme.theme--dark {
            @include _enable-color-group-theme($identifier, "dark");
        }
    }
}


@function color($identifier, $shade: "normal", $theme: null) {
    @return property.get-scoped-property($_property, _color-identifier($identifier, $shade, $theme));
}