@use "config.flecss" as config;

@use "./util/layout/space";
@use "./util/state/breakpoint";


* {
    box-sizing: border-box;
}

html {
    padding: 0;
    height: 100%;
    font-family: sans-serif;
    font-size: 16px;
    font-weight: 400;
    text-rendering: optimizeLegibility;
    scroll-padding-top: space.space("m");
    scroll-behavior: smooth;
    
    @include breakpoint.breakpoint--xl(true) {
        font-size: 17px;
    }
    @include breakpoint.breakpoint--s {
        font-size: 15px;
    }
}

body {  
    margin: 0;
    min-height: 100%;
    font-size: 1rem;
}

body,
header, main, footer {
    width: 100%;
}

body,
main, header, footer,
aside, section, div {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    height: fit-content;
}

body {
    & > main,
    & > div:first-of-type {
        flex: 1 0 auto;
    }
    & > main ~ div {
        flex: auto !important;
    }
}

main {
    aside, div {
        gap: space.space("m");
    }
}

main {
    p, blockquote {
        max-width: config.$max-text-width;
    }
}

h1, h2, h3, h4, h5, h6,
p,
blockquote,
table,
ul, ol,
pre, code {
    margin: 0;
}

p, blockquote,
td,
li {
    line-height: 1.5em;
}

input, textarea {
    font-family: inherit;
    font-size: inherit;
}

img {
    max-width: 100%;
    object-fit: cover;
}

a {
    text-decoration: none;
}

h1, h2, h3, h4, h5, h6 {
    line-height: 1.375em;
    font-weight: 600;

    &:not(:first-child) {
        margin-top: space.space("m");
    }
    &:not(:last-child) {
        transform: translateY(calc(-1 * (0.375em / 2)));
        margin-bottom: calc(-0.375em + space.space("xs"));

        & + p {
            margin-top: -0.375em;
        }
    }
}