$space-orders: (
    "extra-small": -2, "xs": -2,
    "small": -1, "s": -1,
    "medium": 0, "m": 0,
    "large": 1, "l": 1,
    "extra-large": 2, "xl": 2
);


@mixin space($var, $default-order: "m") {
    @at-root :root {
        #{$var}: flecss_space($default-order);
    }
    
    @include class-modifier("extra-small", "xs") {
        #{$var}: flecss_space("xs");
    }
    @include class-modifier("small", "s") {
        #{$var}: flecss_space("s");
    }
    @include class-modifier("medium", "m") {
        #{$var}: flecss_space("m");
    }
    @include class-modifier("large", "l") {
        #{$var}: flecss_space("l");
    }
    @include class-modifier("extra-large", "xl") {
        #{$var}: flecss_space("xl");
    }
}

@function flecss-space($order: "m") {
    $power: 0;
    @if map-has-key($space-orders, $order) {
        $power: map-get($space-orders, $order);
    }

    @return calc(var(--space) * pow(var(--space-factor), $power));
}